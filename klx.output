Terminals unused in grammar

   RETTANGOLO
   TRIANGOLO
   SETTORE
   PENTAGONO
   QUADRATO
   COMMA
   SQOPEN
   SQCLOSE
   KLAMMERAFFE
   EOL
   SWOPEN
   SWCLOSE
   GIALLO
   DOLLAR
   SNAKE
   HASH
   FOREACH
   FOR


Grammar

    0 $accept: programma $end

    1 programma: header setting stmlist trailer

    2 header: %empty

    3 setting: %empty

    4 stmlist: %empty
    5        | stmlist stmt

    6 stmt: setup optlist klecks teardown

    7 $@1: %empty

    8 $@2: %empty

    9 stmt: WHILE $@1 OPEN bool CLOSE $@2 stmt
   10     | VAR ID ';'

   11 $@3: %empty

   12 stmt: IF bool THEN $@3 stmt

   13 $@4: %empty

   14 stmt: '{' $@4 stmlist '}'
   15     | ID '=' expr SEMICOLON

   16 bool: boolpraefix
   17     | bool '&' boolpraefix
   18     | bool '|' boolpraefix

   19 boolpraefix: boolatomic
   20            | '!' boolatomic

   21 boolatomic: expr '<' expr
   22           | expr LESSSAME expr
   23           | expr '>' expr
   24           | expr GREATERSAME expr
   25           | expr SAME expr
   26           | OPEN bool CLOSE

   27 expr: product
   28     | expr '+' product
   29     | expr '-' product

   30 product: exponent
   31        | product '*' exponent
   32        | product '/' exponent

   33 exponent: praefix
   34         | praefix '^' exponent

   35 praefix: atomic
   36        | '+' atomic
   37        | '-' atomic

   38 atomic: INTEGER
   39       | DOUBLE
   40       | ID
   41       | OPEN expr CLOSE

   42 klecks: SEIPUNTI PACMAN
   43       | SEIPUNTI CERCHIO
   44       | SEIPUNTI POLIGONO

   45 setup: %empty

   46 teardown: %empty

   47 optlist: %empty
   48        | optlist opt

   49 opt: scala
   50    | gira
   51    | colora
   52    | luogo

   53 scala: DUEPUNTI expr QUADDROPUNTI SCALA

   54 gira: DUEPUNTI expr QUADDROPUNTI GIRA

   55 colora: DUEPUNTI colore QUADDROPUNTI COLORA

   56 colore: ROSSO
   57       | VERDE
   58       | AZZURO
   59       | rgbcode

   60 rgbcode: expr DUEPUNTI expr DUEPUNTI expr

   61 luogo: DUEPUNTI expr DUEPUNTI expr QUADDROPUNTI LUOGO

   62 trailer: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 20
'&' (38) 17
'*' (42) 31
'+' (43) 28 36
'-' (45) 29 37
'/' (47) 32
';' (59) 10
'<' (60) 21
'=' (61) 15
'>' (62) 23
'^' (94) 34
'{' (123) 14
'|' (124) 18
'}' (125) 14
error (256)
CERCHIO (258) 43
RETTANGOLO (259)
TRIANGOLO (260)
SETTORE (261)
PACMAN (262) 42
PENTAGONO (263)
POLIGONO (264) 44
QUADRATO (265)
SEMICOLON (266) 15
COMMA (267)
DUEPUNTI (268) 53 54 55 60 61
QUADDROPUNTI (269) 53 54 55 61
SEIPUNTI (270) 42 43 44
SQOPEN (271)
SQCLOSE (272)
KLAMMERAFFE (273)
EOL (274)
OPEN (275) 9 26 41
CLOSE (276) 9 26 41
SAME (277) 25
LESSSAME (278) 22
GREATERSAME (279) 24
SWOPEN (280)
SWCLOSE (281)
INTEGER (282) 38
DOUBLE (283) 39
ID (284) 10 15 40
COLORA (285) 55
SCALA (286) 53
GIRA (287) 54
LUOGO (288) 61
ROSSO (289) 56
VERDE (290) 57
AZZURO (291) 58
GIALLO (292)
DOLLAR (293)
SNAKE (294)
HASH (295)
IF (296) 12
THEN (297) 12
WHILE (298) 9
FOREACH (299)
FOR (300)
VAR (301) 10


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
programma (62)
    on left: 1, on right: 0
header (63)
    on left: 2, on right: 1
setting (64)
    on left: 3, on right: 1
stmlist (65)
    on left: 4 5, on right: 1 5 14
stmt (66)
    on left: 6 9 10 12 14 15, on right: 5 9 12
$@1 (67)
    on left: 7, on right: 9
$@2 (68)
    on left: 8, on right: 9
$@3 (69)
    on left: 11, on right: 12
$@4 (70)
    on left: 13, on right: 14
bool (71)
    on left: 16 17 18, on right: 9 12 17 18 26
boolpraefix (72)
    on left: 19 20, on right: 16 17 18
boolatomic (73)
    on left: 21 22 23 24 25 26, on right: 19 20
expr (74)
    on left: 27 28 29, on right: 15 21 22 23 24 25 28 29 41 53 54 60
    61
product (75)
    on left: 30 31 32, on right: 27 28 29 31 32
exponent (76)
    on left: 33 34, on right: 30 31 32 34
praefix (77)
    on left: 35 36 37, on right: 33 34
atomic (78)
    on left: 38 39 40 41, on right: 35 36 37
klecks (79)
    on left: 42 43 44, on right: 6
setup (80)
    on left: 45, on right: 6
teardown (81)
    on left: 46, on right: 6
optlist (82)
    on left: 47 48, on right: 6 48
opt (83)
    on left: 49 50 51 52, on right: 48
scala (84)
    on left: 53, on right: 49
gira (85)
    on left: 54, on right: 50
colora (86)
    on left: 55, on right: 51
colore (87)
    on left: 56 57 58 59, on right: 55
rgbcode (88)
    on left: 60, on right: 59
luogo (89)
    on left: 61, on right: 52
trailer (90)
    on left: 62, on right: 1


State 0

    0 $accept: . programma $end

    $default  reduce using rule 2 (header)

    programma  go to state 1
    header     go to state 2


State 1

    0 $accept: programma . $end

    $end  shift, and go to state 3


State 2

    1 programma: header . setting stmlist trailer

    $default  reduce using rule 3 (setting)

    setting  go to state 4


State 3

    0 $accept: programma $end .

    $default  accept


State 4

    1 programma: header setting . stmlist trailer

    $default  reduce using rule 4 (stmlist)

    stmlist  go to state 5


State 5

    1 programma: header setting stmlist . trailer
    5 stmlist: stmlist . stmt

    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    VAR    shift, and go to state 9
    '{'    shift, and go to state 10

    $end      reduce using rule 62 (trailer)
    $default  reduce using rule 45 (setup)

    stmt     go to state 11
    setup    go to state 12
    trailer  go to state 13


State 6

   15 stmt: ID . '=' expr SEMICOLON

    '='  shift, and go to state 14


State 7

   12 stmt: IF . bool THEN $@3 stmt

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '!'      shift, and go to state 19
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    bool         go to state 22
    boolpraefix  go to state 23
    boolatomic   go to state 24
    expr         go to state 25
    product      go to state 26
    exponent     go to state 27
    praefix      go to state 28
    atomic       go to state 29


State 8

    9 stmt: WHILE . $@1 OPEN bool CLOSE $@2 stmt

    $default  reduce using rule 7 ($@1)

    $@1  go to state 30


State 9

   10 stmt: VAR . ID ';'

    ID  shift, and go to state 31


State 10

   14 stmt: '{' . $@4 stmlist '}'

    $default  reduce using rule 13 ($@4)

    $@4  go to state 32


State 11

    5 stmlist: stmlist stmt .

    $default  reduce using rule 5 (stmlist)


State 12

    6 stmt: setup . optlist klecks teardown

    $default  reduce using rule 47 (optlist)

    optlist  go to state 33


State 13

    1 programma: header setting stmlist trailer .

    $default  reduce using rule 1 (programma)


State 14

   15 stmt: ID '=' . expr SEMICOLON

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 35
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 15

   26 boolatomic: OPEN . bool CLOSE
   41 atomic: OPEN . expr CLOSE

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '!'      shift, and go to state 19
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    bool         go to state 36
    boolpraefix  go to state 23
    boolatomic   go to state 24
    expr         go to state 37
    product      go to state 26
    exponent     go to state 27
    praefix      go to state 28
    atomic       go to state 29


State 16

   38 atomic: INTEGER .

    $default  reduce using rule 38 (atomic)


State 17

   39 atomic: DOUBLE .

    $default  reduce using rule 39 (atomic)


State 18

   40 atomic: ID .

    $default  reduce using rule 40 (atomic)


State 19

   20 boolpraefix: '!' . boolatomic

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    boolatomic  go to state 38
    expr        go to state 25
    product     go to state 26
    exponent    go to state 27
    praefix     go to state 28
    atomic      go to state 29


State 20

   36 praefix: '+' . atomic

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18

    atomic  go to state 39


State 21

   37 praefix: '-' . atomic

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18

    atomic  go to state 40


State 22

   12 stmt: IF bool . THEN $@3 stmt
   17 bool: bool . '&' boolpraefix
   18     | bool . '|' boolpraefix

    THEN  shift, and go to state 41
    '|'   shift, and go to state 42
    '&'   shift, and go to state 43


State 23

   16 bool: boolpraefix .

    $default  reduce using rule 16 (bool)


State 24

   19 boolpraefix: boolatomic .

    $default  reduce using rule 19 (boolpraefix)


State 25

   21 boolatomic: expr . '<' expr
   22           | expr . LESSSAME expr
   23           | expr . '>' expr
   24           | expr . GREATERSAME expr
   25           | expr . SAME expr
   28 expr: expr . '+' product
   29     | expr . '-' product

    SAME         shift, and go to state 44
    LESSSAME     shift, and go to state 45
    GREATERSAME  shift, and go to state 46
    '<'          shift, and go to state 47
    '>'          shift, and go to state 48
    '+'          shift, and go to state 49
    '-'          shift, and go to state 50


State 26

   27 expr: product .
   31 product: product . '*' exponent
   32        | product . '/' exponent

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 27 (expr)


State 27

   30 product: exponent .

    $default  reduce using rule 30 (product)


State 28

   33 exponent: praefix .
   34         | praefix . '^' exponent

    '^'  shift, and go to state 53

    $default  reduce using rule 33 (exponent)


State 29

   35 praefix: atomic .

    $default  reduce using rule 35 (praefix)


State 30

    9 stmt: WHILE $@1 . OPEN bool CLOSE $@2 stmt

    OPEN  shift, and go to state 54


State 31

   10 stmt: VAR ID . ';'

    ';'  shift, and go to state 55


State 32

   14 stmt: '{' $@4 . stmlist '}'

    $default  reduce using rule 4 (stmlist)

    stmlist  go to state 56


State 33

    6 stmt: setup optlist . klecks teardown
   48 optlist: optlist . opt

    DUEPUNTI  shift, and go to state 57
    SEIPUNTI  shift, and go to state 58

    klecks  go to state 59
    opt     go to state 60
    scala   go to state 61
    gira    go to state 62
    colora  go to state 63
    luogo   go to state 64


State 34

   41 atomic: OPEN . expr CLOSE

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 65
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 35

   15 stmt: ID '=' expr . SEMICOLON
   28 expr: expr . '+' product
   29     | expr . '-' product

    SEMICOLON  shift, and go to state 66
    '+'        shift, and go to state 49
    '-'        shift, and go to state 50


State 36

   17 bool: bool . '&' boolpraefix
   18     | bool . '|' boolpraefix
   26 boolatomic: OPEN bool . CLOSE

    CLOSE  shift, and go to state 67
    '|'    shift, and go to state 42
    '&'    shift, and go to state 43


State 37

   21 boolatomic: expr . '<' expr
   22           | expr . LESSSAME expr
   23           | expr . '>' expr
   24           | expr . GREATERSAME expr
   25           | expr . SAME expr
   28 expr: expr . '+' product
   29     | expr . '-' product
   41 atomic: OPEN expr . CLOSE

    CLOSE        shift, and go to state 68
    SAME         shift, and go to state 44
    LESSSAME     shift, and go to state 45
    GREATERSAME  shift, and go to state 46
    '<'          shift, and go to state 47
    '>'          shift, and go to state 48
    '+'          shift, and go to state 49
    '-'          shift, and go to state 50


State 38

   20 boolpraefix: '!' boolatomic .

    $default  reduce using rule 20 (boolpraefix)


State 39

   36 praefix: '+' atomic .

    $default  reduce using rule 36 (praefix)


State 40

   37 praefix: '-' atomic .

    $default  reduce using rule 37 (praefix)


State 41

   12 stmt: IF bool THEN . $@3 stmt

    $default  reduce using rule 11 ($@3)

    $@3  go to state 69


State 42

   18 bool: bool '|' . boolpraefix

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '!'      shift, and go to state 19
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    boolpraefix  go to state 70
    boolatomic   go to state 24
    expr         go to state 25
    product      go to state 26
    exponent     go to state 27
    praefix      go to state 28
    atomic       go to state 29


State 43

   17 bool: bool '&' . boolpraefix

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '!'      shift, and go to state 19
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    boolpraefix  go to state 71
    boolatomic   go to state 24
    expr         go to state 25
    product      go to state 26
    exponent     go to state 27
    praefix      go to state 28
    atomic       go to state 29


State 44

   25 boolatomic: expr SAME . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 72
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 45

   22 boolatomic: expr LESSSAME . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 73
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 46

   24 boolatomic: expr GREATERSAME . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 74
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 47

   21 boolatomic: expr '<' . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 75
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 48

   23 boolatomic: expr '>' . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 76
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 49

   28 expr: expr '+' . product

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    product   go to state 77
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 50

   29 expr: expr '-' . product

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    product   go to state 78
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 51

   31 product: product '*' . exponent

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    exponent  go to state 79
    praefix   go to state 28
    atomic    go to state 29


State 52

   32 product: product '/' . exponent

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    exponent  go to state 80
    praefix   go to state 28
    atomic    go to state 29


State 53

   34 exponent: praefix '^' . exponent

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    exponent  go to state 81
    praefix   go to state 28
    atomic    go to state 29


State 54

    9 stmt: WHILE $@1 OPEN . bool CLOSE $@2 stmt

    OPEN     shift, and go to state 15
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '!'      shift, and go to state 19
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    bool         go to state 82
    boolpraefix  go to state 23
    boolatomic   go to state 24
    expr         go to state 25
    product      go to state 26
    exponent     go to state 27
    praefix      go to state 28
    atomic       go to state 29


State 55

   10 stmt: VAR ID ';' .

    $default  reduce using rule 10 (stmt)


State 56

    5 stmlist: stmlist . stmt
   14 stmt: '{' $@4 stmlist . '}'

    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    VAR    shift, and go to state 9
    '{'    shift, and go to state 10
    '}'    shift, and go to state 83

    $default  reduce using rule 45 (setup)

    stmt   go to state 11
    setup  go to state 12


State 57

   53 scala: DUEPUNTI . expr QUADDROPUNTI SCALA
   54 gira: DUEPUNTI . expr QUADDROPUNTI GIRA
   55 colora: DUEPUNTI . colore QUADDROPUNTI COLORA
   61 luogo: DUEPUNTI . expr DUEPUNTI expr QUADDROPUNTI LUOGO

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    ROSSO    shift, and go to state 84
    VERDE    shift, and go to state 85
    AZZURO   shift, and go to state 86
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 87
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29
    colore    go to state 88
    rgbcode   go to state 89


State 58

   42 klecks: SEIPUNTI . PACMAN
   43       | SEIPUNTI . CERCHIO
   44       | SEIPUNTI . POLIGONO

    CERCHIO   shift, and go to state 90
    PACMAN    shift, and go to state 91
    POLIGONO  shift, and go to state 92


State 59

    6 stmt: setup optlist klecks . teardown

    $default  reduce using rule 46 (teardown)

    teardown  go to state 93


State 60

   48 optlist: optlist opt .

    $default  reduce using rule 48 (optlist)


State 61

   49 opt: scala .

    $default  reduce using rule 49 (opt)


State 62

   50 opt: gira .

    $default  reduce using rule 50 (opt)


State 63

   51 opt: colora .

    $default  reduce using rule 51 (opt)


State 64

   52 opt: luogo .

    $default  reduce using rule 52 (opt)


State 65

   28 expr: expr . '+' product
   29     | expr . '-' product
   41 atomic: OPEN expr . CLOSE

    CLOSE  shift, and go to state 68
    '+'    shift, and go to state 49
    '-'    shift, and go to state 50


State 66

   15 stmt: ID '=' expr SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 67

   26 boolatomic: OPEN bool CLOSE .

    $default  reduce using rule 26 (boolatomic)


State 68

   41 atomic: OPEN expr CLOSE .

    $default  reduce using rule 41 (atomic)


State 69

   12 stmt: IF bool THEN $@3 . stmt

    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    VAR    shift, and go to state 9
    '{'    shift, and go to state 10

    $default  reduce using rule 45 (setup)

    stmt   go to state 94
    setup  go to state 12


State 70

   18 bool: bool '|' boolpraefix .

    $default  reduce using rule 18 (bool)


State 71

   17 bool: bool '&' boolpraefix .

    $default  reduce using rule 17 (bool)


State 72

   25 boolatomic: expr SAME expr .
   28 expr: expr . '+' product
   29     | expr . '-' product

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 25 (boolatomic)


State 73

   22 boolatomic: expr LESSSAME expr .
   28 expr: expr . '+' product
   29     | expr . '-' product

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 22 (boolatomic)


State 74

   24 boolatomic: expr GREATERSAME expr .
   28 expr: expr . '+' product
   29     | expr . '-' product

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 24 (boolatomic)


State 75

   21 boolatomic: expr '<' expr .
   28 expr: expr . '+' product
   29     | expr . '-' product

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 21 (boolatomic)


State 76

   23 boolatomic: expr '>' expr .
   28 expr: expr . '+' product
   29     | expr . '-' product

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 23 (boolatomic)


State 77

   28 expr: expr '+' product .
   31 product: product . '*' exponent
   32        | product . '/' exponent

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 28 (expr)


State 78

   29 expr: expr '-' product .
   31 product: product . '*' exponent
   32        | product . '/' exponent

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 29 (expr)


State 79

   31 product: product '*' exponent .

    $default  reduce using rule 31 (product)


State 80

   32 product: product '/' exponent .

    $default  reduce using rule 32 (product)


State 81

   34 exponent: praefix '^' exponent .

    $default  reduce using rule 34 (exponent)


State 82

    9 stmt: WHILE $@1 OPEN bool . CLOSE $@2 stmt
   17 bool: bool . '&' boolpraefix
   18     | bool . '|' boolpraefix

    CLOSE  shift, and go to state 95
    '|'    shift, and go to state 42
    '&'    shift, and go to state 43


State 83

   14 stmt: '{' $@4 stmlist '}' .

    $default  reduce using rule 14 (stmt)


State 84

   56 colore: ROSSO .

    $default  reduce using rule 56 (colore)


State 85

   57 colore: VERDE .

    $default  reduce using rule 57 (colore)


State 86

   58 colore: AZZURO .

    $default  reduce using rule 58 (colore)


State 87

   28 expr: expr . '+' product
   29     | expr . '-' product
   53 scala: DUEPUNTI expr . QUADDROPUNTI SCALA
   54 gira: DUEPUNTI expr . QUADDROPUNTI GIRA
   60 rgbcode: expr . DUEPUNTI expr DUEPUNTI expr
   61 luogo: DUEPUNTI expr . DUEPUNTI expr QUADDROPUNTI LUOGO

    DUEPUNTI      shift, and go to state 96
    QUADDROPUNTI  shift, and go to state 97
    '+'           shift, and go to state 49
    '-'           shift, and go to state 50


State 88

   55 colora: DUEPUNTI colore . QUADDROPUNTI COLORA

    QUADDROPUNTI  shift, and go to state 98


State 89

   59 colore: rgbcode .

    $default  reduce using rule 59 (colore)


State 90

   43 klecks: SEIPUNTI CERCHIO .

    $default  reduce using rule 43 (klecks)


State 91

   42 klecks: SEIPUNTI PACMAN .

    $default  reduce using rule 42 (klecks)


State 92

   44 klecks: SEIPUNTI POLIGONO .

    $default  reduce using rule 44 (klecks)


State 93

    6 stmt: setup optlist klecks teardown .

    $default  reduce using rule 6 (stmt)


State 94

   12 stmt: IF bool THEN $@3 stmt .

    $default  reduce using rule 12 (stmt)


State 95

    9 stmt: WHILE $@1 OPEN bool CLOSE . $@2 stmt

    $default  reduce using rule 8 ($@2)

    $@2  go to state 99


State 96

   60 rgbcode: expr DUEPUNTI . expr DUEPUNTI expr
   61 luogo: DUEPUNTI expr DUEPUNTI . expr QUADDROPUNTI LUOGO

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 100
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 97

   53 scala: DUEPUNTI expr QUADDROPUNTI . SCALA
   54 gira: DUEPUNTI expr QUADDROPUNTI . GIRA

    SCALA  shift, and go to state 101
    GIRA   shift, and go to state 102


State 98

   55 colora: DUEPUNTI colore QUADDROPUNTI . COLORA

    COLORA  shift, and go to state 103


State 99

    9 stmt: WHILE $@1 OPEN bool CLOSE $@2 . stmt

    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8
    VAR    shift, and go to state 9
    '{'    shift, and go to state 10

    $default  reduce using rule 45 (setup)

    stmt   go to state 104
    setup  go to state 12


State 100

   28 expr: expr . '+' product
   29     | expr . '-' product
   60 rgbcode: expr DUEPUNTI expr . DUEPUNTI expr
   61 luogo: DUEPUNTI expr DUEPUNTI expr . QUADDROPUNTI LUOGO

    DUEPUNTI      shift, and go to state 105
    QUADDROPUNTI  shift, and go to state 106
    '+'           shift, and go to state 49
    '-'           shift, and go to state 50


State 101

   53 scala: DUEPUNTI expr QUADDROPUNTI SCALA .

    $default  reduce using rule 53 (scala)


State 102

   54 gira: DUEPUNTI expr QUADDROPUNTI GIRA .

    $default  reduce using rule 54 (gira)


State 103

   55 colora: DUEPUNTI colore QUADDROPUNTI COLORA .

    $default  reduce using rule 55 (colora)


State 104

    9 stmt: WHILE $@1 OPEN bool CLOSE $@2 stmt .

    $default  reduce using rule 9 (stmt)


State 105

   60 rgbcode: expr DUEPUNTI expr DUEPUNTI . expr

    OPEN     shift, and go to state 34
    INTEGER  shift, and go to state 16
    DOUBLE   shift, and go to state 17
    ID       shift, and go to state 18
    '+'      shift, and go to state 20
    '-'      shift, and go to state 21

    expr      go to state 107
    product   go to state 26
    exponent  go to state 27
    praefix   go to state 28
    atomic    go to state 29


State 106

   61 luogo: DUEPUNTI expr DUEPUNTI expr QUADDROPUNTI . LUOGO

    LUOGO  shift, and go to state 108


State 107

   28 expr: expr . '+' product
   29     | expr . '-' product
   60 rgbcode: expr DUEPUNTI expr DUEPUNTI expr .

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50

    $default  reduce using rule 60 (rgbcode)


State 108

   61 luogo: DUEPUNTI expr DUEPUNTI expr QUADDROPUNTI LUOGO .

    $default  reduce using rule 61 (luogo)
