Terminals unused in grammar

   RETTANGOLO
   TRIANGOLO
   SETTORE
   PENTAGONO
   QUADRATO
   OTTO
   EOL
   ISNOT
   GIALLO
   FOREACH
   REPEAT


State 36 conflicts: 2 shift/reduce


Grammar

    0 $accept: programma $end

    1 programma: header setting functions stmlist trailer

    2 header: %empty

    3 setting: %empty

    4 functions: %empty

    5 stmlist: %empty
    6        | stmlist stmt

    7 stmt: setup optlist klecks teardown

    8 $@1: %empty

    9 $@2: %empty

   10 stmt: WHILE $@1 '(' bool ')' $@2 stmt
   11     | VAR '@' ID

   12 $@3: %empty

   13 stmt: IF bool THEN $@3 stmt

   14 $@4: %empty

   15 stmt: '{' $@4 stmlist '}'
   16     | expr '@' ID

   17 $@5: %empty

   18 stmt: '#' expr $@5 stmt

   19 bool: boolpraefix
   20     | bool '&' boolpraefix
   21     | bool '|' boolpraefix

   22 boolpraefix: boolatomic
   23            | '!' boolatomic

   24 boolatomic: expr '<' expr
   25           | expr LESSSAME expr
   26           | expr '>' expr
   27           | expr BIGGERSAME expr
   28           | expr SAME expr
   29           | '(' bool ')'

   30 expr: product
   31     | expr '+' product
   32     | expr '-' product
   33     | expr '%' product

   34 product: exponent
   35        | product '*' exponent
   36        | product '/' exponent

   37 exponent: praefix
   38         | praefix '^' exponent

   39 praefix: atomic
   40        | '+' atomic
   41        | '-' atomic

   42 atomic: INTEGER
   43       | DOUBLE
   44       | ID
   45       | '(' expr ')'

   46 klecks: SEI PACMAN
   47       | SEI CERCHIO
   48       | DUE expr DUE expr SEI POLIGONO

   49 setup: %empty

   50 teardown: %empty

   51 optlist: %empty
   52        | optlist opt

   53 opt: scala
   54    | gira
   55    | colora
   56    | positione

   57 scala: DUE expr DUE expr QUADDRO SCALA

   58 gira: DUE expr QUADDRO GIRA

   59 colora: DUE colore QUADDRO COLORA

   60 colore: ROSSO
   61       | VERDE
   62       | AZZURO
   63       | rgbcode

   64 rgbcode: expr DUE expr DUE expr

   65 positione: DUE expr DUE expr QUADDRO POSITIONE

   66 trailer: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 23
'#' (35) 18
'%' (37) 33
'&' (38) 20
'(' (40) 10 29 45
')' (41) 10 29 45
'*' (42) 35
'+' (43) 31 40
'-' (45) 32 41
'/' (47) 36
'<' (60) 24
'>' (62) 26
'@' (64) 11 16
'^' (94) 38
'{' (123) 15
'|' (124) 21
'}' (125) 15
error (256)
CERCHIO (258) 47
RETTANGOLO (259)
TRIANGOLO (260)
SETTORE (261)
PACMAN (262) 46
PENTAGONO (263)
POLIGONO (264) 48
QUADRATO (265)
DUE (266) 48 57 58 59 64 65
QUADDRO (267) 57 58 59 65
SEI (268) 46 47 48
OTTO (269)
EOL (270)
LESSSAME (271) 25
BIGGERSAME (272) 27
SAME (273) 28
ISNOT (274)
INTEGER (275) 42
DOUBLE (276) 43
ID (277) 11 16 44
COLORA (278) 59
SCALA (279) 57
GIRA (280) 58
POSITIONE (281) 65
ROSSO (282) 60
VERDE (283) 61
AZZURO (284) 62
GIALLO (285)
IF (286) 13
THEN (287) 13
WHILE (288) 10
FOREACH (289)
REPEAT (290)
VAR (291) 11


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
programma (55)
    on left: 1, on right: 0
header (56)
    on left: 2, on right: 1
setting (57)
    on left: 3, on right: 1
functions (58)
    on left: 4, on right: 1
stmlist (59)
    on left: 5 6, on right: 1 6 15
stmt (60)
    on left: 7 10 11 13 15 16 18, on right: 6 10 13 18
$@1 (61)
    on left: 8, on right: 10
$@2 (62)
    on left: 9, on right: 10
$@3 (63)
    on left: 12, on right: 13
$@4 (64)
    on left: 14, on right: 15
$@5 (65)
    on left: 17, on right: 18
bool (66)
    on left: 19 20 21, on right: 10 13 20 21 29
boolpraefix (67)
    on left: 22 23, on right: 19 20 21
boolatomic (68)
    on left: 24 25 26 27 28 29, on right: 22 23
expr (69)
    on left: 30 31 32 33, on right: 16 18 24 25 26 27 28 31 32 33 45
    48 57 58 64 65
product (70)
    on left: 34 35 36, on right: 30 31 32 33 35 36
exponent (71)
    on left: 37 38, on right: 34 35 36 38
praefix (72)
    on left: 39 40 41, on right: 37 38
atomic (73)
    on left: 42 43 44 45, on right: 39 40 41
klecks (74)
    on left: 46 47 48, on right: 7
setup (75)
    on left: 49, on right: 7
teardown (76)
    on left: 50, on right: 7
optlist (77)
    on left: 51 52, on right: 7 52
opt (78)
    on left: 53 54 55 56, on right: 52
scala (79)
    on left: 57, on right: 53
gira (80)
    on left: 58, on right: 54
colora (81)
    on left: 59, on right: 55
colore (82)
    on left: 60 61 62 63, on right: 59
rgbcode (83)
    on left: 64, on right: 63
positione (84)
    on left: 65, on right: 56
trailer (85)
    on left: 66, on right: 1


State 0

    0 $accept: . programma $end

    $default  reduce using rule 2 (header)

    programma  go to state 1
    header     go to state 2


State 1

    0 $accept: programma . $end

    $end  shift, and go to state 3


State 2

    1 programma: header . setting functions stmlist trailer

    $default  reduce using rule 3 (setting)

    setting  go to state 4


State 3

    0 $accept: programma $end .

    $default  accept


State 4

    1 programma: header setting . functions stmlist trailer

    $default  reduce using rule 4 (functions)

    functions  go to state 5


State 5

    1 programma: header setting functions . stmlist trailer

    $default  reduce using rule 5 (stmlist)

    stmlist  go to state 6


State 6

    1 programma: header setting functions stmlist . trailer
    6 stmlist: stmlist . stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    VAR      shift, and go to state 12
    '('      shift, and go to state 13
    '{'      shift, and go to state 14
    '#'      shift, and go to state 15
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    $end      reduce using rule 66 (trailer)
    $default  reduce using rule 49 (setup)

    stmt      go to state 18
    expr      go to state 19
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    setup     go to state 24
    trailer   go to state 25


State 7

   42 atomic: INTEGER .

    $default  reduce using rule 42 (atomic)


State 8

   43 atomic: DOUBLE .

    $default  reduce using rule 43 (atomic)


State 9

   44 atomic: ID .

    $default  reduce using rule 44 (atomic)


State 10

   13 stmt: IF . bool THEN $@3 stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '!'      shift, and go to state 26
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    bool         go to state 28
    boolpraefix  go to state 29
    boolatomic   go to state 30
    expr         go to state 31
    product      go to state 20
    exponent     go to state 21
    praefix      go to state 22
    atomic       go to state 23


State 11

   10 stmt: WHILE . $@1 '(' bool ')' $@2 stmt

    $default  reduce using rule 8 ($@1)

    $@1  go to state 32


State 12

   11 stmt: VAR . '@' ID

    '@'  shift, and go to state 33


State 13

   45 atomic: '(' . expr ')'

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 34
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 14

   15 stmt: '{' . $@4 stmlist '}'

    $default  reduce using rule 14 ($@4)

    $@4  go to state 35


State 15

   18 stmt: '#' . expr $@5 stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 36
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 16

   40 praefix: '+' . atomic

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13

    atomic  go to state 37


State 17

   41 praefix: '-' . atomic

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13

    atomic  go to state 38


State 18

    6 stmlist: stmlist stmt .

    $default  reduce using rule 6 (stmlist)


State 19

   16 stmt: expr . '@' ID
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '@'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42


State 20

   30 expr: product .
   35 product: product . '*' exponent
   36        | product . '/' exponent

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 30 (expr)


State 21

   34 product: exponent .

    $default  reduce using rule 34 (product)


State 22

   37 exponent: praefix .
   38         | praefix . '^' exponent

    '^'  shift, and go to state 45

    $default  reduce using rule 37 (exponent)


State 23

   39 praefix: atomic .

    $default  reduce using rule 39 (praefix)


State 24

    7 stmt: setup . optlist klecks teardown

    $default  reduce using rule 51 (optlist)

    optlist  go to state 46


State 25

    1 programma: header setting functions stmlist trailer .

    $default  reduce using rule 1 (programma)


State 26

   23 boolpraefix: '!' . boolatomic

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    boolatomic  go to state 47
    expr        go to state 31
    product     go to state 20
    exponent    go to state 21
    praefix     go to state 22
    atomic      go to state 23


State 27

   29 boolatomic: '(' . bool ')'
   45 atomic: '(' . expr ')'

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '!'      shift, and go to state 26
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    bool         go to state 48
    boolpraefix  go to state 29
    boolatomic   go to state 30
    expr         go to state 49
    product      go to state 20
    exponent     go to state 21
    praefix      go to state 22
    atomic       go to state 23


State 28

   13 stmt: IF bool . THEN $@3 stmt
   20 bool: bool . '&' boolpraefix
   21     | bool . '|' boolpraefix

    THEN  shift, and go to state 50
    '|'   shift, and go to state 51
    '&'   shift, and go to state 52


State 29

   19 bool: boolpraefix .

    $default  reduce using rule 19 (bool)


State 30

   22 boolpraefix: boolatomic .

    $default  reduce using rule 22 (boolpraefix)


State 31

   24 boolatomic: expr . '<' expr
   25           | expr . LESSSAME expr
   26           | expr . '>' expr
   27           | expr . BIGGERSAME expr
   28           | expr . SAME expr
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    LESSSAME    shift, and go to state 53
    BIGGERSAME  shift, and go to state 54
    SAME        shift, and go to state 55
    '<'         shift, and go to state 56
    '>'         shift, and go to state 57
    '+'         shift, and go to state 40
    '-'         shift, and go to state 41
    '%'         shift, and go to state 42


State 32

   10 stmt: WHILE $@1 . '(' bool ')' $@2 stmt

    '('  shift, and go to state 58


State 33

   11 stmt: VAR '@' . ID

    ID  shift, and go to state 59


State 34

   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product
   45 atomic: '(' expr . ')'

    ')'  shift, and go to state 60
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42


State 35

   15 stmt: '{' $@4 . stmlist '}'

    $default  reduce using rule 5 (stmlist)

    stmlist  go to state 61


State 36

   18 stmt: '#' expr . $@5 stmt
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    '+'       [reduce using rule 17 ($@5)]
    '-'       [reduce using rule 17 ($@5)]
    $default  reduce using rule 17 ($@5)

    $@5  go to state 62


State 37

   40 praefix: '+' atomic .

    $default  reduce using rule 40 (praefix)


State 38

   41 praefix: '-' atomic .

    $default  reduce using rule 41 (praefix)


State 39

   16 stmt: expr '@' . ID

    ID  shift, and go to state 63


State 40

   31 expr: expr '+' . product

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    product   go to state 64
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 41

   32 expr: expr '-' . product

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    product   go to state 65
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 42

   33 expr: expr '%' . product

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    product   go to state 66
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 43

   35 product: product '*' . exponent

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    exponent  go to state 67
    praefix   go to state 22
    atomic    go to state 23


State 44

   36 product: product '/' . exponent

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    exponent  go to state 68
    praefix   go to state 22
    atomic    go to state 23


State 45

   38 exponent: praefix '^' . exponent

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    exponent  go to state 69
    praefix   go to state 22
    atomic    go to state 23


State 46

    7 stmt: setup optlist . klecks teardown
   52 optlist: optlist . opt

    DUE  shift, and go to state 70
    SEI  shift, and go to state 71

    klecks     go to state 72
    opt        go to state 73
    scala      go to state 74
    gira       go to state 75
    colora     go to state 76
    positione  go to state 77


State 47

   23 boolpraefix: '!' boolatomic .

    $default  reduce using rule 23 (boolpraefix)


State 48

   20 bool: bool . '&' boolpraefix
   21     | bool . '|' boolpraefix
   29 boolatomic: '(' bool . ')'

    '|'  shift, and go to state 51
    '&'  shift, and go to state 52
    ')'  shift, and go to state 78


State 49

   24 boolatomic: expr . '<' expr
   25           | expr . LESSSAME expr
   26           | expr . '>' expr
   27           | expr . BIGGERSAME expr
   28           | expr . SAME expr
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product
   45 atomic: '(' expr . ')'

    LESSSAME    shift, and go to state 53
    BIGGERSAME  shift, and go to state 54
    SAME        shift, and go to state 55
    ')'         shift, and go to state 60
    '<'         shift, and go to state 56
    '>'         shift, and go to state 57
    '+'         shift, and go to state 40
    '-'         shift, and go to state 41
    '%'         shift, and go to state 42


State 50

   13 stmt: IF bool THEN . $@3 stmt

    $default  reduce using rule 12 ($@3)

    $@3  go to state 79


State 51

   21 bool: bool '|' . boolpraefix

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '!'      shift, and go to state 26
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    boolpraefix  go to state 80
    boolatomic   go to state 30
    expr         go to state 31
    product      go to state 20
    exponent     go to state 21
    praefix      go to state 22
    atomic       go to state 23


State 52

   20 bool: bool '&' . boolpraefix

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '!'      shift, and go to state 26
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    boolpraefix  go to state 81
    boolatomic   go to state 30
    expr         go to state 31
    product      go to state 20
    exponent     go to state 21
    praefix      go to state 22
    atomic       go to state 23


State 53

   25 boolatomic: expr LESSSAME . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 82
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 54

   27 boolatomic: expr BIGGERSAME . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 83
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 55

   28 boolatomic: expr SAME . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 84
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 56

   24 boolatomic: expr '<' . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 85
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 57

   26 boolatomic: expr '>' . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 86
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 58

   10 stmt: WHILE $@1 '(' . bool ')' $@2 stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '!'      shift, and go to state 26
    '('      shift, and go to state 27
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    bool         go to state 87
    boolpraefix  go to state 29
    boolatomic   go to state 30
    expr         go to state 31
    product      go to state 20
    exponent     go to state 21
    praefix      go to state 22
    atomic       go to state 23


State 59

   11 stmt: VAR '@' ID .

    $default  reduce using rule 11 (stmt)


State 60

   45 atomic: '(' expr ')' .

    $default  reduce using rule 45 (atomic)


State 61

    6 stmlist: stmlist . stmt
   15 stmt: '{' $@4 stmlist . '}'

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    VAR      shift, and go to state 12
    '('      shift, and go to state 13
    '{'      shift, and go to state 14
    '}'      shift, and go to state 88
    '#'      shift, and go to state 15
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    $default  reduce using rule 49 (setup)

    stmt      go to state 18
    expr      go to state 19
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    setup     go to state 24


State 62

   18 stmt: '#' expr $@5 . stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    VAR      shift, and go to state 12
    '('      shift, and go to state 13
    '{'      shift, and go to state 14
    '#'      shift, and go to state 15
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    $default  reduce using rule 49 (setup)

    stmt      go to state 89
    expr      go to state 19
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    setup     go to state 24


State 63

   16 stmt: expr '@' ID .

    $default  reduce using rule 16 (stmt)


State 64

   31 expr: expr '+' product .
   35 product: product . '*' exponent
   36        | product . '/' exponent

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 31 (expr)


State 65

   32 expr: expr '-' product .
   35 product: product . '*' exponent
   36        | product . '/' exponent

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 32 (expr)


State 66

   33 expr: expr '%' product .
   35 product: product . '*' exponent
   36        | product . '/' exponent

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 33 (expr)


State 67

   35 product: product '*' exponent .

    $default  reduce using rule 35 (product)


State 68

   36 product: product '/' exponent .

    $default  reduce using rule 36 (product)


State 69

   38 exponent: praefix '^' exponent .

    $default  reduce using rule 38 (exponent)


State 70

   48 klecks: DUE . expr DUE expr SEI POLIGONO
   57 scala: DUE . expr DUE expr QUADDRO SCALA
   58 gira: DUE . expr QUADDRO GIRA
   59 colora: DUE . colore QUADDRO COLORA
   65 positione: DUE . expr DUE expr QUADDRO POSITIONE

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    ROSSO    shift, and go to state 90
    VERDE    shift, and go to state 91
    AZZURO   shift, and go to state 92
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 93
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    colore    go to state 94
    rgbcode   go to state 95


State 71

   46 klecks: SEI . PACMAN
   47       | SEI . CERCHIO

    CERCHIO  shift, and go to state 96
    PACMAN   shift, and go to state 97


State 72

    7 stmt: setup optlist klecks . teardown

    $default  reduce using rule 50 (teardown)

    teardown  go to state 98


State 73

   52 optlist: optlist opt .

    $default  reduce using rule 52 (optlist)


State 74

   53 opt: scala .

    $default  reduce using rule 53 (opt)


State 75

   54 opt: gira .

    $default  reduce using rule 54 (opt)


State 76

   55 opt: colora .

    $default  reduce using rule 55 (opt)


State 77

   56 opt: positione .

    $default  reduce using rule 56 (opt)


State 78

   29 boolatomic: '(' bool ')' .

    $default  reduce using rule 29 (boolatomic)


State 79

   13 stmt: IF bool THEN $@3 . stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    VAR      shift, and go to state 12
    '('      shift, and go to state 13
    '{'      shift, and go to state 14
    '#'      shift, and go to state 15
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    $default  reduce using rule 49 (setup)

    stmt      go to state 99
    expr      go to state 19
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    setup     go to state 24


State 80

   21 bool: bool '|' boolpraefix .

    $default  reduce using rule 21 (bool)


State 81

   20 bool: bool '&' boolpraefix .

    $default  reduce using rule 20 (bool)


State 82

   25 boolatomic: expr LESSSAME expr .
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 25 (boolatomic)


State 83

   27 boolatomic: expr BIGGERSAME expr .
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 27 (boolatomic)


State 84

   28 boolatomic: expr SAME expr .
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 28 (boolatomic)


State 85

   24 boolatomic: expr '<' expr .
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 24 (boolatomic)


State 86

   26 boolatomic: expr '>' expr .
   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 26 (boolatomic)


State 87

   10 stmt: WHILE $@1 '(' bool . ')' $@2 stmt
   20 bool: bool . '&' boolpraefix
   21     | bool . '|' boolpraefix

    '|'  shift, and go to state 51
    '&'  shift, and go to state 52
    ')'  shift, and go to state 100


State 88

   15 stmt: '{' $@4 stmlist '}' .

    $default  reduce using rule 15 (stmt)


State 89

   18 stmt: '#' expr $@5 stmt .

    $default  reduce using rule 18 (stmt)


State 90

   60 colore: ROSSO .

    $default  reduce using rule 60 (colore)


State 91

   61 colore: VERDE .

    $default  reduce using rule 61 (colore)


State 92

   62 colore: AZZURO .

    $default  reduce using rule 62 (colore)


State 93

   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product
   48 klecks: DUE expr . DUE expr SEI POLIGONO
   57 scala: DUE expr . DUE expr QUADDRO SCALA
   58 gira: DUE expr . QUADDRO GIRA
   64 rgbcode: expr . DUE expr DUE expr
   65 positione: DUE expr . DUE expr QUADDRO POSITIONE

    DUE      shift, and go to state 101
    QUADDRO  shift, and go to state 102
    '+'      shift, and go to state 40
    '-'      shift, and go to state 41
    '%'      shift, and go to state 42


State 94

   59 colora: DUE colore . QUADDRO COLORA

    QUADDRO  shift, and go to state 103


State 95

   63 colore: rgbcode .

    $default  reduce using rule 63 (colore)


State 96

   47 klecks: SEI CERCHIO .

    $default  reduce using rule 47 (klecks)


State 97

   46 klecks: SEI PACMAN .

    $default  reduce using rule 46 (klecks)


State 98

    7 stmt: setup optlist klecks teardown .

    $default  reduce using rule 7 (stmt)


State 99

   13 stmt: IF bool THEN $@3 stmt .

    $default  reduce using rule 13 (stmt)


State 100

   10 stmt: WHILE $@1 '(' bool ')' . $@2 stmt

    $default  reduce using rule 9 ($@2)

    $@2  go to state 104


State 101

   48 klecks: DUE expr DUE . expr SEI POLIGONO
   57 scala: DUE expr DUE . expr QUADDRO SCALA
   64 rgbcode: expr DUE . expr DUE expr
   65 positione: DUE expr DUE . expr QUADDRO POSITIONE

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 105
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 102

   58 gira: DUE expr QUADDRO . GIRA

    GIRA  shift, and go to state 106


State 103

   59 colora: DUE colore QUADDRO . COLORA

    COLORA  shift, and go to state 107


State 104

   10 stmt: WHILE $@1 '(' bool ')' $@2 . stmt

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    IF       shift, and go to state 10
    WHILE    shift, and go to state 11
    VAR      shift, and go to state 12
    '('      shift, and go to state 13
    '{'      shift, and go to state 14
    '#'      shift, and go to state 15
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    $default  reduce using rule 49 (setup)

    stmt      go to state 108
    expr      go to state 19
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23
    setup     go to state 24


State 105

   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product
   48 klecks: DUE expr DUE expr . SEI POLIGONO
   57 scala: DUE expr DUE expr . QUADDRO SCALA
   64 rgbcode: expr DUE expr . DUE expr
   65 positione: DUE expr DUE expr . QUADDRO POSITIONE

    DUE      shift, and go to state 109
    QUADDRO  shift, and go to state 110
    SEI      shift, and go to state 111
    '+'      shift, and go to state 40
    '-'      shift, and go to state 41
    '%'      shift, and go to state 42


State 106

   58 gira: DUE expr QUADDRO GIRA .

    $default  reduce using rule 58 (gira)


State 107

   59 colora: DUE colore QUADDRO COLORA .

    $default  reduce using rule 59 (colora)


State 108

   10 stmt: WHILE $@1 '(' bool ')' $@2 stmt .

    $default  reduce using rule 10 (stmt)


State 109

   64 rgbcode: expr DUE expr DUE . expr

    INTEGER  shift, and go to state 7
    DOUBLE   shift, and go to state 8
    ID       shift, and go to state 9
    '('      shift, and go to state 13
    '+'      shift, and go to state 16
    '-'      shift, and go to state 17

    expr      go to state 112
    product   go to state 20
    exponent  go to state 21
    praefix   go to state 22
    atomic    go to state 23


State 110

   57 scala: DUE expr DUE expr QUADDRO . SCALA
   65 positione: DUE expr DUE expr QUADDRO . POSITIONE

    SCALA      shift, and go to state 113
    POSITIONE  shift, and go to state 114


State 111

   48 klecks: DUE expr DUE expr SEI . POLIGONO

    POLIGONO  shift, and go to state 115


State 112

   31 expr: expr . '+' product
   32     | expr . '-' product
   33     | expr . '%' product
   64 rgbcode: expr DUE expr DUE expr .

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '%'  shift, and go to state 42

    $default  reduce using rule 64 (rgbcode)


State 113

   57 scala: DUE expr DUE expr QUADDRO SCALA .

    $default  reduce using rule 57 (scala)


State 114

   65 positione: DUE expr DUE expr QUADDRO POSITIONE .

    $default  reduce using rule 65 (positione)


State 115

   48 klecks: DUE expr DUE expr SEI POLIGONO .

    $default  reduce using rule 48 (klecks)
